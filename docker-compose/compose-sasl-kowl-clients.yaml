version: '3'
services:
  redpanda:
    image: vectorized/redpanda:latest
    command:
      - redpanda start
      - --set redpanda.enable_sasl=true
      - --set redpanda.superUsers=["admin"]
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://127.0.0.1:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr redpanda:8082
      - --set schema_registry_client.sasl_mechanism=SCRAM-SHA-256
      - --set schema_registry_client.scram_username=admin
      - --set schema_registry_client.scram_password=rp123
      - '--set schema_registry_client.brokers={"address":"redpanda","port":29092}'
      - --set pandaproxy_client.sasl_mechanism=SCRAM-SHA-256
      - --set pandaproxy_client.scram_username=admin
      - --set pandaproxy_client.scram_password=rp123
      - '--set pandaproxy_client.brokers={"address":"redpanda","port":29092}'
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 9644:9644
      - 29092:29092
  redpandarpk:
    command:
      - acl
      - user
      - create
      - admin
      - -p
      - rp123
      - --mechanism
      - 'SCRAM-SHA-256'
      - --api-urls redpanda:9644
    image: 'docker.vectorized.io/vectorized/redpanda:latest'
    container_name: redpanda2
    restart: on-failure:4
    depends_on:
      - 'redpanda'
  connect:
    image: cnfldemos/cp-server-connect-datagen:0.5.0-6.2.0
    hostname: connect
    container_name: connect
    depends_on:
      - redpandarpk
    ports:
      - "8083:8083"
    restart: on-failure
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'redpanda:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://redpanda:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_SASL_MECHANISM: "SCRAM-SHA-256"
      CONNECT_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
      CONNECT_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"rp123\";"
      CONNECT_PRODUCER_SASL_MECHANISM: "SCRAM-SHA-256"
      CONNECT_PRODUCER_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"rp123\";"
  kowl:
    image: quay.io/cloudhut/kowl:master-1d07695
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$KOWL_CONFIG_FILE\" > /tmp/config.yml; /app/kowl"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      KOWL_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          sasl:
            enabled: true
            username: admin
            password: rp123
            mechanism: SCRAM-SHA-256
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        connect:
          enabled: true
          clusters:
            name: datagen
            url: http://connect:8083
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - redpandarpk
      - connect
